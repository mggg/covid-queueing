(this["webpackJsonpcovid-queueing"]=this["webpackJsonpcovid-queueing"]||[]).push([[0],{213:function(e,t,a){e.exports=a.p+"static/media/logo.5691b2a9.svg"},237:function(e,t,a){e.exports=a(354)},243:function(e,t,a){},353:function(e,t,a){},354:function(e,t,a){"use strict";a.r(t);var n=a(1),r=a.n(n),s=a(97),i=a.n(s),l=(a(242),a(243),a(59)),o=a(60),u=a(70),m=a(68),c=a(213),d=a.n(c),h=a(142),f=a(228),p=a(109),g=a(115),b=a(46),E=a(31),y=a(15),v=a(32),S=a(227),k=a(232),w=a(81),x=a(230),T=a(57),M=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement(v.a.Group,{key:this.props.controlId,className:"model-param",controlId:this.props.controlId},r.a.createElement(E.a,null,r.a.createElement(y.a,{md:4}),r.a.createElement(y.a,{md:2},r.a.createElement(v.a.Control,{type:"number",value:this.props.value,onChange:this.props.onChange,isInvalid:!!this.props.errors})),r.a.createElement(v.a.Label,{column:!0,md:3},this.props.label)),function(){if(e.props.errors)return r.a.createElement(v.a.Control.Feedback,{type:"invalid"},r.a.createElement(E.a,null,r.a.createElement(y.a,{md:4}),r.a.createElement(y.a,{md:4},r.a.createElement("p",null,e.props.errors))))}())}}]),a}(r.a.Component),O=a(231),C=a(229),j=a(365),N=a(371),I=a(376),D=a(367),P=a(370),A=a(369),W=a(372),H=a(366),L=a(377),q=a(218),G=a.n(q);function F(e){for(var t=Math.exp(-e),a=0,n=1;n>t;)n*=Math.random(),a++;return a-1}var z=function(e,t,a,n,r){for(var s=6e4*r,i=Math.ceil((n-a)/s),l=a,o=Array(i),u=0,m=0;m<i;m++){for(;u<t.length-1&&t[u+1].start<=l;)u++;o[m]=t[u].demand,l=new Date(new Date(l).getTime()+s)}var c=e/o.reduce((function(e,t){return e+t}));return o.map((function(e){return e*c}))},R=function(e,t,a,n){for(var r=e.length,s=Array(r).fill(null).map((function(e,t){return new Map})),i=0;i<n;i++)for(var l=e.map(F),o=0,u=Array(t).fill(-1),m=0;o<r;m++)for(var c=0;c<t;c++){for(;0===l[o]&&o<r;)o++;if(o>m||o>=r)break;if(u[c]<=m){u[c]=m+a;var d=m-o;d in s[o]?s[o][d]+=1:s[o][d]=1,l[o]--}}return s},_="#d1352b",U="'HK Grotesk', Helvetica, sans-serif",J=[1,5,20,50,80,95,99],V=[.2,.35,.52,.52,.35,.2],B=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(e){var n;return Object(l.a)(this,a),(n=t.call(this,e)).bandsData=G()((function(e){var t=[],a=[],n=Math.floor(7.5),r=0,s=0,i=0,l=0;if(void 0!==e){for(var o=e.map((function(e){return function(e,t){if(0===Object.keys(e).length)return null;t.sort((function(e,t){return e-t}));for(var a=Array(t.length).fill(0),n=Object.keys(e).sort((function(e,t){return e-t})),r=0,s=e[n[0]]-1,i=Object.values(e).reduce((function(e,t){return e+t})),l=0;l<t.length;l++){for(var o=Math.max(0,Math.ceil(i*t[l]/100)-1);s<o&&r<n.length-1;)s=s+1+e[n[r]]-1,r++;a[l]=n[r]}return a}(e,J)})),u=Array(J.length),m=function(e){var t=function(e,t){for(var a=Math.floor(t/2),n=e.length-2*a,r=Array(n),s=0;s<n;s++){var i=e.slice(s,s+2*a+1).filter((function(e){return null!==e}));r[s]=i.reduce((function(e,t){return parseInt(e)+parseInt(t)}))/i.length}return r}(o.map((function(t){return null===t?null:t[e]})),15);if(u[e]=t,50===J[e]){i=t.length;for(var r=0;r<t.length;r++)a.push({x:r+n,y:t[r]}),s=Math.max(t[r],s);l=t.length+n-1}},c=0;c<J.length;c++)m(c);for(var d=0;d<V.length;d++){for(var h=u[d],f=u[d+1],p=Array(f.length),g=0;g<f.length;g++)p[g]={x:g+n,y:f[g],y0:h[g]},r=Math.max(f[g],r);t.push({xy:p,alpha:V[d]})}}return{median:a,percentiles:t,maxStep:l,steps:i,maxTime:r,maxMedianTime:s}}),{cacheLimit:256}),n.state={width:0},n.getTicks=n.getTicks.bind(Object(b.a)(n)),n.updateWidth=n.updateWidth.bind(Object(b.a)(n)),n}return Object(o.a)(a,[{key:"getStyles",value:function(){var e=this;return{timeAxis:{axis:{stroke:"black",strokeWidth:1},ticks:{size:function(t){var a=t.tick;if(e.state.width>300){if(a%60===0)return 10;if(a%15===0)return 5}else{if(a%120===0)return 10;if(a%30===0)return 5}return 0},stroke:"black",strokeWidth:1},tickLabels:{fill:"black",fontFamily:U,fontSize:9}},minutesAxis:{axis:{stroke:"black",strokeWidth:1},ticks:{size:3,stroke:"black",strokeWidth:1},tickLabels:{fill:"black",fontFamily:U,fontSize:9}},maxMedianTimeLine:{data:{stroke:"#999",strokeWidth:.8,strokeDasharray:"1, 2",strokeLinecap:"round"}},maxMedianTimeLabel:[{fill:"black",fontFamily:U,fontSize:7.25},{fill:"black",fontFamily:U,fontSize:7.25,fontWeight:500}],maxMedianTimeScatter:{data:{fill:"#f9f9f9"}},axisLabel:{fill:"black",fontFamily:U,fontSize:10,fontWeight:500},legend:{labels:{fill:"black",fontFamily:U,fontSize:10}}}}},{key:"updateWidth",value:function(){var e=300;window.innerWidth>=992?e=625:window.innerWidth>=768&&(e=475),this.setState({width:e})}},{key:"componentDidMount",value:function(){this.updateWidth(),window.addEventListener("resize",this.updateWidth)}},{key:"getTicks",value:function(){if(void 0!==this.props.startTime&&void 0!==this.props.endTime){var e=Math.ceil((this.props.endTime-this.props.startTime)/6e4);return Object(O.a)(Array(e+10).keys()).map((function(e){return e-5}))}return[]}},{key:"shouldComponentUpdate",value:function(e,t){return this.props.separateStudentsStaff!==e.separateStudentsStaff||this.props.peopleHists!==e.peopleHists||this.props.studentHists!==e.studentHists||this.props.staffHists!==e.staffHists||this.state.width!==t.width}},{key:"render",value:function(){var e,t,a,n,s,i,l,o,u,m,c,d,h,f,p=this,g=this.getStyles(),b=this.getTicks();!0===this.props.separateStudentsStaff?(n=this.bandsData(this.props.studentHists),s=n.median,i=n.percentiles,l=this.bandsData(this.props.staffHists),o=l.median,u=l.percentiles,m=Math.max(n.maxTime,l.maxTime),c=Math.max(n.maxMedianTime,l.maxMedianTime),h=l.steps,d=l.maxStep):(e=this.bandsData(this.props.peopleHists),t=e.median,a=e.percentiles,m=e.maxTime,c=e.maxMedianTime,h=e.steps,d=e.maxStep),m=Math.min(Math.max(m,10),120),f=m>=120;var E=Math.round(c);return E+=1===E?" minute":" minutes",r.a.createElement(r.a.Fragment,null,r.a.createElement(j.a,{width:this.state.width,height:250,domain:{y:[0,m]},containerComponent:r.a.createElement(N.a,{style:{pointerEvents:"auto",userSelect:"auto",touchAction:"auto"}})},!0===p.props.separateStudentsStaff?[r.a.createElement(I.a,{style:{data:{strokeWidth:3.5}}},r.a.createElement(D.a,{style:{data:{stroke:_}},data:s})),i.map((function(e){return r.a.createElement(I.a,{style:{data:{strokeWidth:0,fillOpacity:e.alpha}}},r.a.createElement(P.a,{style:{data:{fill:_,stroke:_}},data:e.xy}))})),r.a.createElement(I.a,{style:{data:{strokeWidth:4}}},r.a.createElement(D.a,{style:{data:{stroke:"#87ca3f"}},data:o})),u.map((function(e){return r.a.createElement(I.a,{style:{data:{strokeWidth:0,fillOpacity:e.alpha}}},r.a.createElement(P.a,{style:{data:{fill:"#87ca3f",stroke:"#87ca3f"}},data:e.xy}))})),r.a.createElement(A.a,{x:p.state.width/2-60,y:14,orientation:"horizontal",gutter:20,style:g.legend,colorScale:[_,"#87ca3f"],data:[{name:"Students"},{name:"Staff"}]})]:[r.a.createElement(I.a,{style:{data:{strokeWidth:4}}},r.a.createElement(D.a,{style:{data:{stroke:"#4198c8"}},data:t})),a.map((function(e){return r.a.createElement(I.a,{style:{data:{strokeWidth:0,fillOpacity:e.alpha}}},r.a.createElement(P.a,{style:{data:{fill:"#4198c8",stroke:"#4198c8"}},data:e.xy}))}))],r.a.createElement(D.a,{style:g.maxMedianTimeLine,data:[{x:0,y:c},{x:d,y:c}]}),r.a.createElement(W.a,{size:0,data:[{x:h+10,y:c}],style:g.maxMedianTimeScatter,labels:function(){return[p.state.width>300?"maximum wait":"max. wait",E]},labelComponent:r.a.createElement(H.a,{textAnchor:"start",style:g.maxMedianTimeLabel,dx:9,dy:11})}),r.a.createElement(H.a,{x:this.state.width/2-24,y:240,text:"Arrival time",style:g.axisLabel}),r.a.createElement(H.a,{x:42,y:24,text:"Wait",style:g.axisLabel}),r.a.createElement(H.a,{x:33,y:36,text:"(minutes)",style:g.axisLabel}),r.a.createElement(L.a,{standalone:!1,style:g.timeAxis,tickValues:b,tickFormat:function(e){return e%60===0&&p.state.width>300||e%120===0?new Date(new Date(p.props.startTime).getTime()+60*e*1e3).toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit",hour12:!1}).replace(/^0+/,""):""}}),r.a.createElement(L.a,{dependentAxis:!0,orientation:"left",standalone:!1,style:g.minutesAxis})),function(){if(f)return r.a.createElement(C.a,{key:"unstable",variant:"danger"},r.a.createElement("strong",null,"This queue is unstable (wait times exceed ",2," hours).")," Add more testing lines or reduce the number of people.")}())}}]),a}(r.a.Component),Q={8:{start:new Date(2020,1,1,8,0,0),end:new Date(2020,1,1,16,0,0)},10:{start:new Date(2020,1,1,8,0,0),end:new Date(2020,1,1,18,0,0)},12:{start:new Date(2020,1,1,8,0,0),end:new Date(2020,1,1,20,0,0)},14:{start:new Date(2020,1,1,8,0,0),end:new Date(2020,1,1,22,0,0)}},K=new Date(2020,1,1,8,0,0);function $(e){return[{start:K,demand:1},{start:new Date(2020,1,1,8,30,0),demand:e},{start:new Date(2020,1,1,9,30,0),demand:1},{start:new Date(2020,1,1,11,30,0),demand:e},{start:new Date(2020,1,1,12,30,0),demand:1},{start:new Date(2020,1,1,17,0,0),demand:e},{start:new Date(2020,1,1,18,0,0),demand:1}]}var X={"Uniform demand":[{start:K,demand:1}],"Mealtime rush hours (3x increase)":$(3),"Mealtime rush hours (5x increase)":$(5),"Mealtime rush hours (7x increase)":$(7)},Y="Mealtime rush hours (3x increase)",Z={numPeople:1500,numStudents:1200,numStaff:300,numPeopleTestingStations:30,numStudentTestingStations:22,numStaffTestingStations:8,minutesPerTest:8,peopleScenario:Y,studentScenario:Y,staffScenario:Y,dayLength:12},ee=T.b().shape({numStudents:T.a().min(25,"Must test at least 25 students.").max(2e4,"Only 20,000 students allowed per day.").integer("Number of students must be an integer.").required("Number of students is required."),numStaff:T.a().min(25,"Must test at least 25 staff members.").max(2e4,"Only 20,000 staff members allowed per day.").integer("Number of staff members must be an integer.").required("Number of staff members is required."),numPeople:T.a().min(50,"Must test at least 50 people.").max(4e4,"Only 40,000 people allowed per day.").integer("Number of people must be an integer.").required("Number of people is required."),numStudentTestingStations:T.a().min(1,"Must have at least one student testing line.").max(500,"Only 500 student testing lines allowed.").integer("Number of student testing lines must be an integer.").required("Number of student testing lines is required."),numStaffTestingStations:T.a().min(1,"Must have at least one staff testing line.").max(500,"Only 500 staff testing lines allowed.").integer("Number of staff testing lines must be an integer.").required("Number of staff testing lines is required."),numPeopleTestingStations:T.a().min(1,"Must have at least one testing line.").max(1e3,"Only 1,000 testing lines allowed.").integer("Number of testing lines must be an integer.").required("Number of testing lines is required."),minutesPerTest:T.a().min(1,"A test should take at least one minute.").max(30,"A test should take at most 30 minutes.").integer("Test duration should be an integer.").required("Must specify test duration.")}),te=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(e){var n;return Object(l.a)(this,a),(n=t.call(this,e)).state=Object(g.a)(Object(g.a)({},Z),{},{separateStudentsStaff:!1,simRunning:!1}),n.updateChart=n.updateChart.bind(Object(b.a)(n)),n.onSeparationChange=n.onSeparationChange.bind(Object(b.a)(n)),n.onParamChange=n.onParamChange.bind(Object(b.a)(n)),n.handleFormSubmit=n.handleFormSubmit.bind(Object(b.a)(n)),n}return Object(o.a)(a,[{key:"onSeparationChange",value:function(e){this.setState(Object(p.a)({},e.target.name,e.target.checked),(function(){void 0!==this.state.studentHists&&void 0!==this.state.staffHists&&void 0!==this.state.peopleHists||this.updateChart()}))}},{key:"onParamChange",value:function(e){this.setState(Object(p.a)({},e.target.id,e.target.value))}},{key:"componentDidMount",value:function(){this.updateChart()}},{key:"handleFormSubmit",value:function(e,t){var a=this;t.setSubmitting(!0),this.setState(Object(g.a)(Object(g.a)({},e),{},{simRunning:!0}),(function(){a.updateChart().then((function(){a.setState({simRunning:!1})}))})),t.setSubmitting(!1)}},{key:"updateChart",value:function(){var e=this;return new Promise((function(t,a){var n=parseInt(e.state.dayLength),r=Q[n].start,s=Q[n].end,i=parseInt(e.state.minutesPerTest);if(!0===e.state.separateStudentsStaff){var l=parseInt(e.state.numStudents),o=parseInt(e.state.numStaff),u=X[e.state.studentScenario],m=X[e.state.staffScenario],c=parseInt(e.state.numStudentTestingStations),d=parseInt(e.state.numStaffTestingStations),h=Math.max(200,Math.round(2e5/l)),f=Math.max(200,Math.round(2e5/o)),p=z(l,u,r,s,1),g=z(o,m,r,s,1),b=R(p,c,i,h),E=R(g,d,i,f);e.setState({studentHists:b,staffHists:E})}else{var y=parseInt(e.state.numPeople),v=parseInt(e.state.numPeopleTestingStations),S=X[e.state.peopleScenario],k=Math.max(200,Math.round(2e5/y)),w=z(y,S,r,s,1),x=R(w,v,i,k);e.setState({peopleHists:x})}e.setState({startTime:r,endTime:s}),t()}))}},{key:"scenarioOptions",value:function(){return Object.keys(X).sort().map((function(e){return r.a.createElement("option",{key:e,value:e},e)}))}},{key:"render",value:function(){var e=this;return r.a.createElement(h.a,{className:"wait-time-interactive"},r.a.createElement("div",{className:"wait-time-chart"},e.state.simRunning?r.a.createElement("div",{className:"wait-time-progress"},r.a.createElement(k.a,{animated:!0,now:100})):r.a.createElement(B,{separateStudentsStaff:e.state.separateStudentsStaff,peopleHists:e.state.peopleHists,studentHists:e.state.studentHists,staffHists:e.state.staffHists,startTime:e.state.startTime,endTime:e.state.endTime})),r.a.createElement("div",{className:"wait-time-params"},r.a.createElement(x.a,{validationSchema:ee,initialValues:Z,onSubmit:this.handleFormSubmit},(function(t){var a=t.handleSubmit,n=t.handleChange,s=t.values,i=(t.touched,t.isValid,t.errors),l=t.isSubmitting;return r.a.createElement(v.a,{noValidate:!0,onSubmit:a},r.a.createElement(v.a.Group,{as:E.a,className:"justify-content-center",controlId:"separateStudentsStaff"},r.a.createElement(y.a,{md:4},r.a.createElement(v.a.Check,{type:"checkbox",name:"separateStudentsStaff",label:"Separate students and staff",checked:e.state.separateStudentsStaff,onChange:e.onSeparationChange}))),e.state.separateStudentsStaff?r.a.createElement(r.a.Fragment,null,r.a.createElement(E.a,null,r.a.createElement(y.a,{md:4}),r.a.createElement(y.a,{md:4,className:"demand-label"},r.a.createElement("label",null,"Students"))),r.a.createElement(M,{controlId:"numStudents",value:s.numStudents,onChange:n,label:"per day",errors:i.numStudents}),r.a.createElement(M,{controlId:"numStudentTestingStations",value:s.numStudentTestingStations,onChange:n,label:"testing lines",errors:i.numStudentTestingStations}),r.a.createElement(v.a.Group,{as:E.a,controlId:"studentScenario"},r.a.createElement(y.a,{md:4}),r.a.createElement(y.a,{md:4},r.a.createElement(w.a,{as:"select",key:"studentScenario",value:s.studentScenario,onChange:n},e.scenarioOptions()))),r.a.createElement(E.a,null,r.a.createElement(y.a,{md:4}),r.a.createElement(y.a,{md:4,className:"demand-label"},r.a.createElement("label",null,"Staff"))),r.a.createElement(M,{controlId:"numStaff",value:s.numStaff,onChange:n,label:"per day",errors:i.numStaff}),r.a.createElement(M,{controlId:"numStaffTestingStations",value:s.numStaffTestingStations,onChange:n,label:"testing lines",errors:i.numStaffTestingStations}),r.a.createElement(v.a.Group,{as:E.a,controlId:"staffScenario"},r.a.createElement(y.a,{md:4}),r.a.createElement(y.a,{md:4},r.a.createElement(w.a,{as:"select",key:"staffScenario",value:s.staffScenario,onChange:n},e.scenarioOptions())))):r.a.createElement(r.a.Fragment,null,r.a.createElement(E.a,null,r.a.createElement(y.a,{md:4}),r.a.createElement(y.a,{md:4,className:"demand-label"},r.a.createElement("label",null,"Demand"))),r.a.createElement(M,{controlId:"numPeople",value:s.numPeople,onChange:n,label:"people per day",errors:i.numPeople}),r.a.createElement(M,{controlId:"numPeopleTestingStations",value:s.numPeopleTestingStations,onChange:n,label:"testing lines",errors:i.numPeopleTestingStations}),r.a.createElement(v.a.Group,{as:E.a,className:"justify-content-center",controlId:"peopleScenario"},r.a.createElement(y.a,{md:4},r.a.createElement(w.a,{as:"select",key:"peopleScenario",value:s.peopleScenario,onChange:n},e.scenarioOptions())))),r.a.createElement(E.a,null,r.a.createElement(y.a,{md:4}),r.a.createElement(y.a,{md:4,className:"ops-label"},r.a.createElement("label",null,"Operations"))),r.a.createElement(M,{controlId:"minutesPerTest",value:s.minutesPerTest,onChange:n,label:"minutes per test",errors:i.minutesPerTest}),r.a.createElement(v.a.Group,{as:E.a,className:"justify-content-center",controlId:"dayLength"},r.a.createElement(y.a,{md:4},r.a.createElement(w.a,{as:"select",key:"dayLength",value:s.dayLength,onChange:n},function(){var e=Object.keys(Q).map((function(e){return parseInt(e)}));return(e=e.sort((function(e,t){return e-t}))).map((function(e){return r.a.createElement("option",{key:e,value:e},e,"-hour day")}))}()))),r.a.createElement(v.a.Group,{as:E.a,className:"justify-content-center",controlId:"simulateButton"},r.a.createElement(y.a,{md:4},r.a.createElement(S.a,{variant:"primary",type:"submit",className:"simulate-button",disabled:Object.entries(i).length>0||l||e.state.simRunning},e.state.simRunning?"Simulating...":"Simulate"))))}))))}}]),a}(r.a.Component),ae=(a(353),function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(e){var n;return Object(l.a)(this,a),(n=t.call(this,e)).state={},n}return Object(o.a)(a,[{key:"render",value:function(){return r.a.createElement("div",{className:"App"},r.a.createElement("header",{className:"site-header"},r.a.createElement("nav",{className:"site-nav"},r.a.createElement("a",{href:"https://mggg.org"},r.a.createElement("img",{src:d.a,alt:"MGGG",className:"logo"})))),r.a.createElement("main",null,r.a.createElement("section",{className:"interactive"},r.a.createElement(f.a,{fluid:!0,className:"lead"},r.a.createElement(h.a,null,r.a.createElement("div",{className:"lead-text"},r.a.createElement("h1",null,"Queueing for Campus Coronavirus Testing"),r.a.createElement("h2",null,"or how to avoid long lines"),r.a.createElement("p",null,"This tool models the impact of planning decisions on projected wait times for coronavirus testing.")),r.a.createElement("div",{className:"model-dropdown"}))),r.a.createElement(te,null)),r.a.createElement("hr",null),r.a.createElement("section",{className:"info"},r.a.createElement("h2",null,"How should I use this?"),r.a.createElement("p",null,"The efficiency of a surveillance testing operation depends both on planning choices and on some behavioral factors that are hard to predict.  This tool lets you experiment with different parameters of demand and operational planning, then performs simulations of participant arrival at testing facilities to predict wait times.  The underlying mathematical model comes from queueing theory, as explained below."),r.a.createElement("p",null,"The output shows the wait time over the course of the day.  The bold line is the median (50",r.a.createElement("sup",null,"th")," percentile) of 200 simulations, and the shaded bands show the 20",r.a.createElement("sup",null,"th"),"-80",r.a.createElement("sup",null,"th"),", 5",r.a.createElement("sup",null,"th"),"-95",r.a.createElement("sup",null,"th"),", and 1",r.a.createElement("sup",null,"st"),"-99",r.a.createElement("sup",null,"th")," percenties around the median."),r.a.createElement("p",null,"Use this tool separately for each campus of a university. If testing sites on the same campus are likely to have different levels of demand, consider each site separately."),r.a.createElement("p",null,"We welcome feedback and suggestions. To discuss this model or any of MGGG's ",r.a.createElement("a",{href:"https://mggg.github.io/covid-landing-page/index.html"},"other coronavirus response projects"),", please reach out at ",r.a.createElement("a",{href:"mailto:contact@mggg.org"},"contact@mggg.org")," or to PI Moon Duchin directly at ",r.a.createElement("a",{href:"mailto:Moon.Duchin@tufts.edu"},"Moon.Duchin@tufts.edu"),".")),r.a.createElement("hr",null),r.a.createElement("section",{className:"info"},r.a.createElement("h2",null,"More about the model"),r.a.createElement("p",null,"This tool uses a ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Monte_Carlo_method"},"Monte Carlo simulation")," to approximate the behavior of an ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/M/D/c_queue"},"M/D/c queue"),", which is a standard model from ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Queueing_theory"},"queueing theory"),". This type of queue assumes that arrivals follow a ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Poisson_point_process"},"Poisson process"),". In the simplest version of such a process, the average rate of arrival is fixed for the entire day."),r.a.createElement("p",null,"Our model allows for increased demand during mealtime \u201crush hours\u201d (8:30 AM-9:30 AM, 11:30 AM-12:30 AM, and 5 PM\u20136 PM). In these scenarios, the average rate of arrival is increased by 3x, 5x, or 7x during rush hours relative to normal hours. In all cases, we assume that testing starts at 8 AM and is continuously available until 4 PM, 6 PM, 8 PM, or 10 PM."))),r.a.createElement("footer",{className:"footer mt-auto py-3"},r.a.createElement("p",null,"This is a summer 2020 project of ",r.a.createElement("a",{href:"https://mggg.org"},"MGGG Redistricting Lab")," at Tufts University's ",r.a.createElement("a",{href:"https://tischcollege.tufts.edu/"},"Jonathan M. Tisch College of Civic Life")," (led by ",r.a.createElement("a",{href:"https://pjrule.github.io/"},"Parker J. Rule"),"). We are grateful for the major support of the National Science Foundation through the RAPID award OIA-2029788, Campus Coronavirus Response.")))}}]),a}(r.a.Component));Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(ae,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[237,1,2]]]);
//# sourceMappingURL=main.f6e7de62.chunk.js.map